#! Triple and Singlet Oxygen energy SOSCF, also tests non-symmetric density matrices

#### UHF Triplet Oxygen energy, triplet
molecule mol {
    0 3
    O
    O 1 1.2
}

# DF case
set {
    basis cc-pVDZ
    guess sad
    soscf true
    scf_type df
    reference uhf
}

# df_uhf_energy = energy('SCF')
# df_triplet_energy = -149.6286212486618865  #TEST
# compare_values(df_triplet_energy, df_uhf_energy, 6, 'DF-UHF Triplet Energy')  #TEST
# 
# # Non-DF case
# set scf_type out_of_core
# uhf_energy = energy('SCF')
# triplet_energy = -149.6289923133230104  #TEST
# compare_values(triplet_energy, uhf_energy, 6, 'OOC-UHF Triplet Energy')  #TEST
# 
# set scf_type pk
# uhf_energy = energy('SCF')
# compare_values(triplet_energy, uhf_energy, 6, 'PK-UHF Triplet Energy')  #TEST
# 
# 
#### RHF Singlet Oxygen energy, singlet
molecule mol {
    0 1
    O
    O 1 1.2
}

# DF case
set {
    reference rhf
}

b3lyp_rhf_energy = energy('B3LYP')
b3lyp_singlet_energy = -150.27140713402315  #TEST
compare_values(psi4.get_variable("SCF N ITERS") < 8, True, 6, 'B3LYP N iter')  #TEST
compare_values(b3lyp_singlet_energy, b3lyp_rhf_energy, 6, 'B3LYP Singlet Energy')  #TEST

pbe_rhf_energy = energy('PBE')
pbe_singlet_energy = -150.13120149480605  #TEST
compare_values(psi4.get_variable("SCF N ITERS") < 8, True, 6, 'PBE N iter')  #TEST
compare_values(pbe_singlet_energy, pbe_rhf_energy, 6, 'PBE Singlet Energy')  #TEST

pbe_rhf_energy = energy('wB97X-D')
pbe_singlet_energy = -150.22359531811128  #TEST
compare_values(psi4.get_variable("SCF N ITERS") < 8, True, 6, 'wB97X-D N iter')  #TEST
compare_values(pbe_singlet_energy, pbe_rhf_energy, 6, 'wB97X-D Singlet Energy')  #TEST

